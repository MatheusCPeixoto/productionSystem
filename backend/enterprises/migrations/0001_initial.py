# Generated by Django 5.0.14 on 2025-06-11 14:48

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('code', models.AutoField(db_column='CODIGO', primary_key=True, serialize=False, verbose_name='Código')),
                ('cnpj', models.CharField(blank=True, db_column='CNPJ', max_length=20, null=True, verbose_name='CNPJ')),
                ('corporate_reason', models.CharField(blank=True, db_column='RAZAOSOCIAL', max_length=100, null=True, verbose_name='Razão Social')),
                ('ie', models.CharField(blank=True, db_column='INSCRICAOESTADUAL', max_length=20, null=True, verbose_name='Inscrição Estadual')),
                ('phone', models.CharField(blank=True, db_column='TELEFONE', max_length=15, null=True, verbose_name='Telefone')),
                ('fax', models.CharField(blank=True, db_column='FAX', max_length=15, null=True, verbose_name='Fax')),
                ('email', models.CharField(blank=True, db_column='EMAIL', max_length=60, null=True, verbose_name='E-mail')),
                ('street', models.CharField(blank=True, db_column='RUA', max_length=100, null=True, verbose_name='Rua')),
                ('street_number', models.CharField(blank=True, db_column='NUMERO', max_length=8, null=True, verbose_name='Número')),
                ('complement', models.CharField(blank=True, db_column='COMPLEMENTO', max_length=255, null=True, verbose_name='Complemento')),
                ('neighborhood', models.CharField(blank=True, db_column='BAIRRO', max_length=255, null=True, verbose_name='Bairro')),
                ('uf', models.CharField(blank=True, db_column='UF', max_length=2, null=True, verbose_name='UF')),
                ('country', models.CharField(blank=True, db_column='PAIS', max_length=20, null=True, verbose_name='País')),
                ('zip_code', models.CharField(blank=True, db_column='CEP', max_length=9, null=True, verbose_name='CEP')),
                ('contact', models.CharField(blank=True, db_column='CONTATO', max_length=40, null=True, verbose_name='Contato')),
                ('is_rural_producer', models.SmallIntegerField(blank=True, db_column='PRODUTORRURAL', null=True, verbose_name='É Produtor Rural')),
                ('branch_activity', models.CharField(blank=True, db_column='RAMOATIVIDADE', max_length=255, null=True, verbose_name='Atividade da Filial')),
                ('im', models.CharField(blank=True, db_column='INSCMUN', max_length=20, null=True, verbose_name='Inscrição Municipal')),
                ('federal_activity_code', models.CharField(blank=True, db_column='CODATIVFED', max_length=20, null=True, verbose_name='Código Atividade Federal')),
                ('code_main_activity', models.CharField(blank=True, db_column='CODATIVIDPRINC', max_length=10, null=True, verbose_name='Código Atividade Principal')),
                ('description_main_activity', models.CharField(blank=True, db_column='DESCATIVIDPRINC', max_length=200, null=True, verbose_name='Descrição Atividade Principal')),
                ('regional_council_number', models.CharField(blank=True, db_column='NUMREGJUNTA', max_length=20, null=True, verbose_name='Número Junta Regional')),
                ('mailbox', models.CharField(blank=True, db_column='CAIXAPOSTAL', max_length=10, null=True, verbose_name='Caixa Postal')),
                ('regional_council_date', models.DateTimeField(blank=True, db_column='DATAREGJUNTA', null=True, verbose_name='Data Junta Regional')),
                ('suframa', models.CharField(blank=True, db_column='SUFRAMA', max_length=14, null=True, verbose_name='SUFRAMA')),
                ('fantasy_name', models.CharField(blank=True, db_column='NOMEFANTASIA', max_length=100, null=True, verbose_name='Nome Fantasia')),
                ('is_main', models.IntegerField(blank=True, db_column='PRINCIPAL', null=True, verbose_name='É Principal')),
                ('cf_despesasfv', models.CharField(blank=True, db_column='CF_DESPESASFV', max_length=50, null=True, verbose_name='Despesas FV')),
                ('cf_custofv', models.CharField(blank=True, db_column='CF_CUSTOFV', max_length=100, null=True, verbose_name='Custo FV')),
                ('ie_auxiliary', models.CharField(blank=True, db_column='INSCRICAOESTADUAL_AUXILIAR', max_length=20, null=True, verbose_name='Inscrição Estadual Auxiliar')),
                ('cf_other_expenses', models.CharField(blank=True, db_column='CF_OUTRAS_DESPEAS', max_length=100, null=True, verbose_name='Outras Despesas')),
                ('tax_regime', models.IntegerField(blank=True, db_column='REGIME_TRIBUTARIO', null=True, verbose_name='Regime Tributário')),
                ('nfe_certificate', models.CharField(blank=True, db_column='NFE_CERTIFICADO', max_length=255, null=True, verbose_name='NFE Certificado')),
                ('nfe_danfe', models.CharField(blank=True, db_column='NFE_DANFE', max_length=200, null=True, verbose_name='NFE DANFE')),
                ('type_certificate', models.IntegerField(blank=True, db_column='TIPO_CERTIFICADO', null=True, verbose_name='Tipo de Certificado')),
                ('simple_credit_aliquot', models.DecimalField(blank=True, db_column='ALIQUOTA_CREDITO_SIMPLES', decimal_places=3, max_digits=6, null=True, verbose_name='Alíquota Crédito Simples')),
                ('accountant_name', models.CharField(blank=True, db_column='CONTABILISTA_NOME', max_length=100, null=True, verbose_name='Nome do Contabilista')),
                ('accountant_cpf', models.CharField(blank=True, db_column='CONTABILISTA_CPF', max_length=14, null=True, verbose_name='CPF do Contabilista')),
                ('accountant_crc', models.CharField(blank=True, db_column='CONTABILISTA_CRC', max_length=15, null=True, verbose_name='CRC do Contabilista')),
                ('accountant_cnpj', models.CharField(blank=True, db_column='CONTABILISTA_CNPJ', max_length=20, null=True, verbose_name='CNPJ do Contabilista')),
                ('accountant_zip_code', models.CharField(blank=True, db_column='CONTABILISTA_CEP', max_length=9, null=True, verbose_name='CEP do Contabilista')),
                ('accountant_street', models.CharField(blank=True, db_column='CONTABILISTA_RUA', max_length=60, null=True, verbose_name='Rua do Contabilista')),
                ('accountant_street_number', models.CharField(blank=True, db_column='CONTABILISTA_NUMERO', max_length=10, null=True, verbose_name='Número da casa do Contabilista')),
                ('accountant_complement', models.CharField(blank=True, db_column='CONTABILISTA_COMPLEMENTO', max_length=60, null=True, verbose_name='Complemento do Contabilista')),
                ('accountant_neighborhood', models.CharField(blank=True, db_column='CONTABILISTA_BAIRRO', max_length=60, null=True, verbose_name='Bairro do Contabilista')),
                ('accountant_phone', models.CharField(blank=True, db_column='CONTABILISTA_TELEFONE', max_length=15, null=True, verbose_name='Telefone do Contabilista')),
                ('accountant_fax', models.CharField(blank=True, db_column='CONTABILISTA_FAX', max_length=15, null=True, verbose_name='Fax do Contabilista')),
                ('accountant_email', models.CharField(blank=True, db_column='CONTABILISTA_EMAIL', max_length=60, null=True, verbose_name='E-mail do Contabilista')),
                ('sped_ind_perfil', models.IntegerField(blank=True, db_column='SPED_IND_PERFIL', null=True, verbose_name='SPED Indicador de Perfil')),
                ('sped_ind_ativ', models.IntegerField(blank=True, db_column='SPED_IND_ATIV', null=True, verbose_name='SPED Indicador de Atividade')),
                ('code_bill_account', models.IntegerField(blank=True, db_column='CODIGO_CONTA_BOLETO', null=True, verbose_name='Código Conta Boleto')),
                ('sped_pc_ind_nat_pj', models.IntegerField(blank=True, db_column='SPED_PC_IND_NAT_PJ', null=True, verbose_name='SPED Indicador de Natureza Jurídica')),
                ('sped_pc_cod_inc_trib', models.IntegerField(blank=True, db_column='SPED_PC_COD_INC_TRIB', null=True, verbose_name='SPED Código de Incidência Tributária')),
                ('sped_pc_cod_tipo_cont', models.IntegerField(blank=True, db_column='SPED_PC_COD_TIPO_CONT', null=True, verbose_name='SPED Código de Tipo de Contabilidade')),
                ('sped_pc_ind_apro_cred', models.IntegerField(blank=True, db_column='SPED_PC_IND_APRO_CRED', null=True, verbose_name='SPED Indicador de Aprovação de Crédito')),
                ('sped_pc_ind_reg_cum', models.IntegerField(blank=True, db_column='SPED_PC_IND_REG_CUM', null=True, verbose_name='SPED Indicador de Registro Cumprido')),
                ('nfe_xml_authorized', models.CharField(blank=True, db_column='NFE_XML_AUTORIZADO', max_length=400, null=True, verbose_name='NFE XML Autorizado')),
                ('nfce_danfce', models.CharField(blank=True, db_column='NFCE_DANFCE', max_length=300, null=True, verbose_name='NFCe DANFCE')),
                ('nfce_csc', models.CharField(blank=True, db_column='NFCE_CSC', max_length=100, null=True, verbose_name='NFCe CSC')),
                ('nfce_id_token', models.CharField(blank=True, db_column='NFCE_ID_TOKEN', max_length=30, null=True, verbose_name='NFCe ID Token')),
                ('is_end_consumer_interstate_icms', models.IntegerField(blank=True, db_column='CONSUMIDORFINAL_ICMSINTERESTATUAL', null=True, verbose_name='É Consumidor Final ICMS Interestadual')),
                ('uses_cest', models.IntegerField(blank=True, db_column='UTILIZA_CEST', null=True, verbose_name='Utiliza CEST')),
                ('uses_calculus_inside', models.IntegerField(blank=True, db_column='UTILIZA_CALCULO_POR_DENTRO', null=True, verbose_name='Utiliza Cálculo por Dentro')),
                ('use_report_filter', models.IntegerField(blank=True, db_column='UTILIZA_FILTRO_RELATORIO', null=True, verbose_name='Utiliza Filtro de Relatório')),
                ('contract_holder', models.CharField(blank=True, db_column='TITULAR_CONTRATO', max_length=100, null=True, verbose_name='Titular do Contrato')),
                ('cnpj_contract', models.CharField(blank=True, db_column='CNPJ_CONTRATO', max_length=20, null=True, verbose_name='CNPJ do Contrato')),
                ('cpf_contract', models.CharField(blank=True, db_column='CPF_CONTRATO', max_length=14, null=True, verbose_name='CPF do Contrato')),
                ('aliquot_iss', models.DecimalField(blank=True, db_column='ALIQUOTA_ISS', decimal_places=3, max_digits=6, null=True, verbose_name='Aliquota ISS')),
                ('use_cfs_grid_product', models.IntegerField(blank=True, db_column='UTILIZA_CFS_GRID_PRODUTO', null=True, verbose_name='Utiliza CFS Grid Produto')),
                ('uses_aliquot_by_region', models.IntegerField(blank=True, db_column='UTILIZA_ALIQUOTA_POR_REGIAO', null=True, verbose_name='Utiliza Alíquota por Região')),
                ('nfse_login', models.CharField(blank=True, db_column='NFSE_LOGIN', max_length=100, null=True, verbose_name='NFSE Login')),
                ('nfse_password', models.CharField(blank=True, db_column='NFSE_SENHA', max_length=100, null=True, verbose_name='NFSE Senha')),
                ('uses_certificate', models.IntegerField(blank=True, db_column='UTILIZA_CERTIFICADO', null=True, verbose_name='Utiliza Certificado')),
                ('qrcode_side', models.IntegerField(blank=True, db_column='QRCODE_LATERAL', null=True, verbose_name='QRCode Lateral')),
                ('path_logo', models.CharField(blank=True, db_column='CAMINHO_LOGO', max_length=1000, null=True, verbose_name='Caminho da Logo')),
                ('integration_bases_wmw', models.CharField(blank=True, db_column='BASE_INTEGRACAO_WMW', max_length=100, null=True, verbose_name='Base de Integração WMW')),
                ('activation_code_sat', models.CharField(blank=True, db_column='CODIGO_ATIVACAO_SAT', max_length=15, null=True, verbose_name='Código de Ativação SAT')),
                ('signature_sat', models.CharField(blank=True, db_column='ASSINATURA_SAT', max_length=350, null=True, verbose_name='Assinatura SAT')),
                ('technical_manager_nfe', models.IntegerField(blank=True, db_column='RESPONSAVEL_TECNICO_NFE', null=True, verbose_name='Responsável Técnico NFE')),
                ('uses_date_filter_finan', models.IntegerField(blank=True, db_column='UTILIZA_FILTRO_DATA_FINAN', null=True, verbose_name='Utiliza Filtro de Data Financeiro')),
                ('uses_larger_obs_danfe', models.IntegerField(blank=True, db_column='UTILIZA_OBS_MAIOR_DANFE', null=True, verbose_name='Utiliza Observação Maior DANFE')),
                ('uses_partial_credit_card', models.IntegerField(blank=True, db_column='UTILIZA_BAIXA_CREDITO_PARCIAL', null=True, verbose_name='Utiliza Baixa de Crédito Parcial')),
                ('use_low_block_finan', models.IntegerField(blank=True, db_column='UTILIZA_BLOQUEIO_BAIXA_FINAN', null=True, verbose_name='Utiliza Bloqueio de Baixa Financeiro')),
                ('uses_annual_data_movements', models.IntegerField(blank=True, db_column='UTILIZA_DATA_ANUAL_MOVIMENTACOES', null=True, verbose_name='Utiliza Data Anual de Movimentações')),
                ('issuer_type_mdfe', models.IntegerField(blank=True, db_column='TIPO_EMITENTE_MDFE', null=True, verbose_name='Tipo de Emitente MDFE')),
                ('series_code_mdfe', models.IntegerField(blank=True, db_column='CODIGO_SERIE_MDFE', null=True, verbose_name='Código de Série MDFE')),
                ('mdfe_rntrc', models.CharField(blank=True, db_column='MDFE_RNTRC', max_length=8, null=True, verbose_name='MDFE RNTRC')),
                ('mdfe_damdfe', models.CharField(blank=True, db_column='MDFE_DAMDFE', max_length=300, null=True, verbose_name='MDFE DAMDFE')),
                ('status_api_payments', models.IntegerField(blank=True, db_column='STATUS_API_PAGAMENTOS', null=True, verbose_name='Status API Pagamentos')),
                ('code_account_api_payments', models.IntegerField(blank=True, db_column='CODIGO_CONTA_API_PAGAMENTOS', null=True, verbose_name='Código Conta API Pagamentos')),
                ('token_api_payments', models.CharField(blank=True, db_column='TOKEN_API_PAGAMENTOS', max_length=30, null=True, verbose_name='Token API Pagamentos')),
                ('send_proof_pay_email_api', models.IntegerField(blank=True, db_column='ENVIA_COMPROVANTE_PAG_EMAIL_API', null=True, verbose_name='Envia Comprovante de Pagamento por E-mail API')),
                ('id_api_connection_integration_nfe', models.CharField(blank=True, db_column='ID_INTEGRACAO_API_CONEXAO_NFE', max_length=50, null=True, verbose_name='ID Integração API Conexão NFE')),
                ('user_api_blumetalk', models.CharField(blank=True, db_column='USUARIO_API_BLUMETALK', max_length=100, null=True, verbose_name='Usuario API Bluemetalk')),
                ('password_api_blumetalk', models.CharField(blank=True, db_column='SENHA_API_BLUMETALK', max_length=100, null=True, verbose_name='Senha API Bluemetalk')),
                ('nfse_cpf_user', models.CharField(blank=True, db_column='NFSE_CPF_USUARIO', max_length=14, null=True, verbose_name='NFSE CPF Usuário')),
                ('default_nfe_directory', models.CharField(blank=True, db_column='DIRETORIO_PADRAO_NFE', max_length=1000, null=True, verbose_name='Diretório Padrão NFE')),
                ('cnpj_payer_api_payment', models.CharField(blank=True, db_column='CNPJ_PAGADOR_API_PAGAMENTO', max_length=20, null=True, verbose_name='CNPJ Pagador API Pagamento')),
                ('uses_history_product_search', models.IntegerField(blank=True, db_column='UTILIZA_HIST_PESQUISA_PRODUTO', null=True, verbose_name='Utiliza Histórico de Pesquisa de Produto')),
                ('use_confirmation_general_search', models.IntegerField(blank=True, db_column='UTILIZA_CONFIRMARCAO_PESQUISA_GERAL', null=True, verbose_name='Utiliza Confirmação de Pesquisa Geral')),
                ('uses_cliforn_global_standard', models.IntegerField(blank=True, db_column='UTILIZA_CLIFORN_GLOBAL_PADRAO', null=True, verbose_name='Utiliza Cliforn Global Padrão')),
                ('uses_global_default_product', models.IntegerField(blank=True, db_column='UTILIZA_PRODUTO_GLOBAL_PADRAO', null=True, verbose_name='Utiliza Produto Global Padrão')),
            ],
            options={
                'verbose_name': 'Filial',
                'verbose_name_plural': 'Filiais',
                'db_table': 'FILIAL',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('code', models.AutoField(db_column='CODIGO', primary_key=True, serialize=False, verbose_name='Código')),
                ('name', models.CharField(blank=True, db_column='NOME', max_length=60, null=True, verbose_name='Nome')),
                ('is_active', models.IntegerField(blank=True, db_column='ATIVA', null=True, verbose_name='Ativa')),
                ('cnpj', models.CharField(blank=True, db_column='CNPJ', max_length=20, null=True, verbose_name='CNPJ')),
                ('ie', models.CharField(blank=True, db_column='IE', max_length=20, null=True, verbose_name='Inscrição Estadual')),
                ('street', models.CharField(blank=True, db_column='RUA', max_length=50, null=True, verbose_name='Rua')),
                ('street_number', models.CharField(blank=True, db_column='NUMERO', max_length=6, null=True, verbose_name='Número')),
                ('neighborhood', models.CharField(blank=True, db_column='BAIRRO', max_length=30, null=True, verbose_name='Bairro')),
                ('city', models.CharField(blank=True, db_column='CIDADE', max_length=50, null=True, verbose_name='Cidade')),
                ('uf', models.CharField(blank=True, db_column='UF', max_length=2, null=True, verbose_name='UF')),
                ('zip_code', models.CharField(blank=True, db_column='CEP', max_length=9, null=True, verbose_name='CEP')),
                ('country', models.CharField(blank=True, db_column='PAIS', max_length=20, null=True, verbose_name='País')),
                ('phone', models.CharField(blank=True, db_column='TELEFONE', max_length=20, null=True, verbose_name='Telefone')),
                ('fax', models.CharField(blank=True, db_column='FAX', max_length=20, null=True, verbose_name='Fax')),
                ('logo', models.CharField(blank=True, db_column='LOGOMARCA', max_length=100, null=True, verbose_name='Logomarca')),
                ('image', models.BinaryField(blank=True, db_column='IMAGEM', max_length='max', null=True, verbose_name='Imagem')),
                ('key', models.TextField(blank=True, db_column='CHAVE', null=True, verbose_name='Chave')),
                ('corporate_reason', models.CharField(blank=True, db_column='RAZAOSOCIAL', max_length=255, null=True, verbose_name='Razão Social')),
            ],
            options={
                'verbose_name': 'Coligada',
                'verbose_name_plural': 'Coligadas',
                'db_table': 'COLIGADA',
                'managed': False,
            },
        ),
    ]
